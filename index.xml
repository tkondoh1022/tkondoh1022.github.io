<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tkondoh</title>
    <link>https://tkondoh1022.github.io/</link>
    <description>Recent content on tkondoh</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2019, Takeo Kondoh; all rights reserved.</copyright>
    <lastBuildDate>Thu, 25 Jun 2020 21:53:34 +0900</lastBuildDate>
    
	<atom:link href="https://tkondoh1022.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Windows Env</title>
      <link>https://tkondoh1022.github.io/post/windows-env/</link>
      <pubDate>Thu, 25 Jun 2020 21:53:34 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/windows-env/</guid>
      <description>Windows Aetup Python encv with anaconda </description>
    </item>
    
    <item>
      <title>Laravel Docker</title>
      <link>https://tkondoh1022.github.io/post/laravel-docker/</link>
      <pubDate>Sun, 14 Jun 2020 05:34:12 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/laravel-docker/</guid>
      <description>Laravel docker directory straucture 1. 2├── backend # Laravel プロジェクトのルートディレクトリ 3└── infrastructure 4 ├── Makefile 5 ├── docker 6 │ ├── mysql 7 │ │ ├── Dockerfile 8 │ │ └── my.cnf 9 │ ├── nginx 10 │ │ ├── Dockerfile 11 │ │ ├── Dockerfile.production =&amp;gt; sample 12 │ │ └── default.conf 13 │ └── php 14 │ ├── Dockerfile 15 │ ├── Dockerfile.production =&amp;gt; sample 16 │ ├── bash 17 │ │ ├── .</description>
    </item>
    
    <item>
      <title>Python Docker</title>
      <link>https://tkondoh1022.github.io/post/python-docker/</link>
      <pubDate>Sat, 16 May 2020 21:12:38 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/python-docker/</guid>
      <description>Setup python on docker 1$ cd ~/work-github/python-env 2$ cat docker-compose.yml 3--- 4version: &amp;#34;3&amp;#34; 5services: 6 app: 7 container_name: &amp;#34;python_env&amp;#34; 8 build: 9 context: . 10 dockerfile: ./Dockerfile 11 image: python_dev:scraping 12 ports: 13 - 5000:5000 14 volumes: 15 - $PWD/work:/opt/work 16 tty: true 17--- 18 19$ cat Dockerfile 20--- 21# python の 3.8.0 をベースにする 22FROM python:3.8.0 23 24RUN apt-get update \ 25 &amp;amp;&amp;amp; apt-get upgrade -y \ 26 # image のサイズを小さくするためにキャッシュ削除 27 &amp;amp;&amp;amp; apt-get clean \ 28 &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* \ 29 # pip のアップデート 30 &amp;amp;&amp;amp; pip install --upgrade pip 31 32# python のパッケージをインストール 33COPY requirements.</description>
    </item>
    
    <item>
      <title>Family Tree</title>
      <link>https://tkondoh1022.github.io/post/family-tree/</link>
      <pubDate>Mon, 27 Apr 2020 21:19:20 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/family-tree/</guid>
      <description> graph LR toshiro -- sinichi take -- sinichi toshiro -- hanae take -- hanae  </description>
    </item>
    
    <item>
      <title>Laravel Tutorial</title>
      <link>https://tkondoh1022.github.io/post/laravel-tutorial/</link>
      <pubDate>Sun, 19 Apr 2020 12:19:25 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/laravel-tutorial/</guid>
      <description>Laravel-v6 Tutorial  https://github.com/bradtraversy/lsapp https://qiita.com/sano1202/items/6021856b70e4f8d3dc3d http://localhost:10080/  Setup sample project:lsapp 1$ cd work-github 2$ git clone git@github.com:tkondoh1022/laravel-env.git laravel-v6 3$ cd laravel-v6 4$ mkdir logs tmp -m 777 5$ docker-compose up -d --build 6$ composer create-project --prefer-dist laravel/laravel=6.* . 7$ composer require predis/predis 8$ sudo chown -R tkondoh:tkondoh ./src-lsapp ./tmp 9$ artisan --version 10Laravel Framework 6.18.13 CRUD: feature/simple https://qiita.com/sayama0402/items/668f7148759910f65da9
E-COMMERCE: feature/ec https://github.com/drehimself/laravel-ecommerce-example
1Clone the repo and cd into it 2$ git clone https://github.</description>
    </item>
    
    <item>
      <title>Laravel Setup</title>
      <link>https://tkondoh1022.github.io/post/laravel-setup/</link>
      <pubDate>Thu, 09 Apr 2020 22:40:09 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/laravel-setup/</guid>
      <description>Laravel-v6 setup on docker  refs: https://qiita.com/ucan-lab/items/17c806973e69792ada99#docker%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B spec:  nginx mysql phpmyadmin node redis mailhog    Setup files 1$ cd work-github 2$ git clone git@github.com:tkondoh1022/laravel-env.git 3 4$ cd laravel-env 5$ tree . 6. 7├── LICENSE 8├── Makefile 9├── README.md 10├── docker 11│ ├── ash 12│ │ ├── aliases.sh 13│ │ └── color_prompt.sh 14│ ├── mysql 15│ │ └── my.cnf 16│ ├── nginx 17│ │ └── default.conf 18│ └── php 19│ ├── Dockerfile 20│ ├── php.</description>
    </item>
    
    <item>
      <title>Cakephp Tutrial</title>
      <link>https://tkondoh1022.github.io/post/cakephp-tutrial/</link>
      <pubDate>Wed, 08 Apr 2020 21:45:49 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/cakephp-tutrial/</guid>
      <description>Note  phpmyadmin: http://localhost:8888/db_structure.php?server=1&amp;amp;db=my_app  Sample https://programming.best/cakephp-controller-sample-2/
bake https://www.sejuku.net/blog/26423
$ make phpfpm /var/www/html # cd sample /var/www/html # ./bin/cake bake controller foo
Creta database https://book.cakephp.org/3/ja/tutorials-and-examples/cms/database.html
Create database using phpmyadmin.</description>
    </item>
    
    <item>
      <title>Cakephp Setup</title>
      <link>https://tkondoh1022.github.io/post/cakephp-setup/</link>
      <pubDate>Tue, 07 Apr 2020 17:55:26 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/cakephp-setup/</guid>
      <description>refs: https://qiita.com/km42428/items/df1d0a1eefddcf771dfa  Setup 1$ cd ~/work-github/ 2$ git clone https://github.com/km42428/docker-cakephp3-template.git cakephp3 3$ cd cakephp3 4$ tree . | less 5. 6`-- docker-cakephp3-template 7 |-- LICENSE 8 |-- README.md 9 |-- data 10 | |-- htdocs 11 | | `-- Dockerfile 12 | |-- mysql 13 | | |-- Dockerfile 14 | | `-- db 15 | |-- nginx 16 | | `-- conf 17 | | |-- conf.d 18 | | | `-- default.</description>
    </item>
    
    <item>
      <title>Wordpress Setup</title>
      <link>https://tkondoh1022.github.io/post/wordpress-setup/</link>
      <pubDate>Mon, 06 Apr 2020 22:34:30 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/wordpress-setup/</guid>
      <description>Wordpress Setup using docker </description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://tkondoh1022.github.io/about/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tkondoh1022.github.io/about/</guid>
      <description>I&amp;rsquo;m a Software Engineer.</description>
    </item>
    
    <item>
      <title>Setup blog</title>
      <link>https://tkondoh1022.github.io/post/blog-setup/</link>
      <pubDate>Sun, 05 Apr 2020 23:46:55 +0900</pubDate>
      
      <guid>https://tkondoh1022.github.io/post/blog-setup/</guid>
      <description>I made my blog site with Hugo and easy-hugo.
 https://www.ted027.com/post/hugo/  SPEC.  url: https://tkondoh1022.github.io os: ubuntu18.04 spacemace and easy-hugo  SETUP Install latest Hugo 1$ sudo snap install hugo --channel=extended 2$ sudo ln -s /sbin/hugo /usr/bin/hugo Setup GitHub Make two repos  blog tkondoh1022.github.io  Set new site and first post 1$ cd ~/work-github 2$ hugo new site blog 3$ cd blog 4$ cd theme 5$ git clone https://github.</description>
    </item>
    
  </channel>
</rss>